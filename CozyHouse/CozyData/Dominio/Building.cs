// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace CozyData.Dominio;

[Table("Building")]
[Index("Code", Name = "Building_Code", IsUnique = true)]
[Index("Doorway", Name = "Building_Doorway")]
public partial class Building
{
    [Key]
    [StringLength(36)]
    [Unicode(false)]
    public string Id { get; set; }

    [Required]
    [StringLength(36)]
    [Unicode(false)]
    public string DistrictId { get; set; }

    [Required]
    [StringLength(36)]
    [Unicode(false)]
    public string StreetId { get; set; }

    [Required]
    [StringLength(36)]
    [Unicode(false)]
    public string BuildingCompanyId { get; set; }

    [StringLength(255)]
    [Unicode(false)]
    public string Name { get; set; }

    [Column(TypeName = "text")]
    public string Description { get; set; }

    [Required]
    [StringLength(30)]
    [Unicode(false)]
    public string Code { get; set; }

    [Required]
    [StringLength(6)]
    [Unicode(false)]
    public string Doorway { get; set; }

    public int FloorCount { get; set; }

    public int YearBuilt { get; set; }

    [Column(TypeName = "decimal(12, 2)")]
    public decimal Price { get; set; }

    [StringLength(1)]
    [Unicode(false)]
    public string EnergyCertificate { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime CreatedAt { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime UpdatedAt { get; set; }

    [Required]
    [StringLength(36)]
    [Unicode(false)]
    public string StatusId { get; set; }

    [InverseProperty("Building")]
    public virtual ICollection<Address> Addresses { get; set; } = new List<Address>();

    [ForeignKey("BuildingCompanyId")]
    [InverseProperty("Buildings")]
    public virtual BuildingCompany BuildingCompany { get; set; }

    [InverseProperty("Building")]
    public virtual ICollection<BuildingImage> BuildingImages { get; set; } = new List<BuildingImage>();

    [InverseProperty("Building")]
    public virtual ICollection<BuildingStatusLog> BuildingStatusLogs { get; set; } = new List<BuildingStatusLog>();

    [ForeignKey("DistrictId")]
    [InverseProperty("Buildings")]
    public virtual District District { get; set; }

    [InverseProperty("Building")]
    public virtual ICollection<Floor> Floors { get; set; } = new List<Floor>();

    [InverseProperty("Building")]
    public virtual ICollection<Purchase> Purchases { get; set; } = new List<Purchase>();

    [InverseProperty("Building")]
    public virtual ICollection<Request> Requests { get; set; } = new List<Request>();

    [ForeignKey("StatusId")]
    [InverseProperty("Buildings")]
    public virtual Status Status { get; set; }

    [ForeignKey("StreetId")]
    [InverseProperty("Buildings")]
    public virtual Street Street { get; set; }
}